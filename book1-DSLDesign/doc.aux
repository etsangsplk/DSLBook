\relax 
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\@writefile{toc}{\contentsline {part}{I\hspace  {1em}DSL Design}{3}{part.1}}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Core Design Dimensions}{5}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Programs, Languages, Domains}{6}{section.1.1}}
\newlabel{hierarchical}{{1.1}{6}{Programs, Languages, Domains\relax }{section.1.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces Programs, Languages, Domains}}{6}{section.1.1}}
\newlabel{fig:programs}{{1.1}{6}{Programs, Languages, Domains\relax }{section.1.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces Languages L1 and L2 under-approximate and over-approximate domain D.}}{7}{section.1.1}}
\newlabel{fig:approximation}{{1.2}{7}{Programs, Languages, Domains\relax }{section.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.1}Programs as Trees of Elements}{7}{subsection.1.1.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.3}{\ignorespaces A \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {BuildingBlockRef}\normalfont   references a hardware element from within a cooling algorithm fragment.}}{9}{equation.1.1.5}}
\newlabel{dependent}{{1.3}{9}{Programs as Trees of Elements\relax }{equation.1.1.5}{}}
\newpmemlabel{^_1}{10}
\@writefile{lof}{\contentsline {figure}{\numberline {1.4}{\ignorespaces An example of a heterogeneous fragment. This module contains global variables (from the \emph  {core} language), a state machine (from the \emph  {statemachines} language) and a test case (from the \emph  {unittest} language). Note how concepts defined in the \emph  {statemachine} language (\fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {trigger}\normalfont  , \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {isInState}\normalfont  ) are used inside a \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {TestCase}\normalfont  .}}{10}{equation.1.1.7}}
\newlabel{heterogeneous}{{1.4}{10}{Programs as Trees of Elements\relax }{equation.1.1.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.2}Domain Hierarchy}{10}{subsection.1.1.2}}
\newlabel{domhier}{{1.1.2}{10}{Domain Hierarchy\relax }{subsection.1.1.2}{}}
\newpmemlabel{^_2}{11}
\@writefile{lof}{\contentsline {figure}{\numberline {1.5}{\ignorespaces Domain hierarchy. Domains with higher index are called subdomains of domains with a lower index ($D_1$ is a subdomain of $D_0$). We use just $D$ to refer to the current domain, and $D_{+1}$ and $D_{-1}$ to refer to the relatively more specific and more general ones.}}{11}{subsection.1.1.2}}
\newlabel{hierarchicalDomains}{{1.5}{11}{Domain Hierarchy\relax }{subsection.1.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.3}Model Purpose}{11}{subsection.1.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.4}Parsing vs. Projection}{12}{subsection.1.1.4}}
\citation{LiVitanyi2008}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.5}Design Dimensions}{13}{subsection.1.1.5}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Expressivity}{13}{section.1.2}}
\citation{Visser07}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}Expressivity and the Domain Hierarchy}{15}{subsection.1.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.2}Linguistic vs. In-Language Abstraction}{15}{subsection.1.2.2}}
\newlabel{lingvsinlang}{{1.2.2}{15}{Linguistic vs. In-Language Abstraction\relax }{subsection.1.2.2}{}}
\@writefile{toc}{\contentsline {paragraph}{Linguistic Abstraction}{15}{paragraph*.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.6}{\ignorespaces Example component diagram. The top half defines components, their ports and the relationship of these ports to interfaces. The bottom half shows instances whose ports are connected by a connector.}}{16}{paragraph*.1}}
\newlabel{components}{{1.6}{16}{Linguistic Abstraction\relax }{paragraph*.1}{}}
\newpmemlabel{^_3}{17}
\@writefile{lof}{\contentsline {figure}{\numberline {1.7}{\ignorespaces The \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {with port}\normalfont   statement is required to surround an invocation on an optional, required port. If the port is not connected for the current instance, the code inside the \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {with port}\normalfont   is not executed. It acts as an \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {if}\normalfont   statement, but since it cannot contain a complete expression, the correct use of the \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {with port}\normalfont   statement can be statically checked.}}{17}{paragraph*.1}}
\newlabel{optionalport}{{1.7}{17}{Linguistic Abstraction\relax }{paragraph*.1}{}}
\@writefile{toc}{\contentsline {paragraph}{In-Lanuguage Abstraction}{17}{paragraph*.2}}
\@writefile{toc}{\contentsline {paragraph}{Standard Library}{18}{paragraph*.3}}
\newpmemlabel{^_4}{18}
\@writefile{lof}{\contentsline {figure}{\numberline {1.8}{\ignorespaces The standard library for the refrigerator configuration language defines which properties are available for the various types of hardware elements.}}{18}{paragraph*.3}}
\newlabel{coolinglib}{{1.8}{18}{Standard Library\relax }{paragraph*.3}{}}
\@writefile{toc}{\contentsline {paragraph}{Linguistic vs. In-Language Abstraction}{18}{paragraph*.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.3}Language Evolution Support}{19}{subsection.1.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.4}Configuration vs. Customization}{20}{subsection.1.2.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.5}Precision vs. Algorithm}{20}{subsection.1.2.5}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Coverage}{20}{section.1.3}}
\newlabel{coverage}{{1.3}{20}{Coverage\relax }{section.1.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.4}Semantics and Execution}{22}{section.1.4}}
\newlabel{semantics}{{1.4}{22}{Semantics and Execution\relax }{section.1.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.1}Static Semantics/Validation}{22}{subsection.1.4.1}}
\newlabel{validation}{{1.4.1}{22}{Static Semantics/Validation\relax }{subsection.1.4.1}{}}
\@writefile{toc}{\contentsline {paragraph}{Constraints}{22}{paragraph*.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.9}{\ignorespaces An example state machine with a \emph  {dead end} state, a state that cannot be left once entered (no outgoing transitions).}}{23}{paragraph*.5}}
\newlabel{states}{{1.9}{23}{Constraints\relax }{paragraph*.5}{}}
\@writefile{toc}{\contentsline {paragraph}{Type Systems}{23}{paragraph*.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.2}Transformation}{25}{subsection.1.4.2}}
\newlabel{semtrafo}{{1.4.2}{25}{Transformation\relax }{subsection.1.4.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.10}{\ignorespaces The robot control DSL is embedded in C program modules and provides linguistic abstractions for controlling a small lego car. It can accelerate, decelerate and turn left and right. }}{25}{subsection.1.4.2}}
\newlabel{lego}{{1.10}{25}{Transformation\relax }{subsection.1.4.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.11}{\ignorespaces Robot control programs are mapped to state machines and tasks. State machines are mapped to C, and tasks are mapped to C as well as to operating system configuration files (a so-called OIL file). In the end, everything ends up in text for downstream processing by existing tools.}}{25}{subsection.1.4.2}}
\newlabel{robotcontrol}{{1.11}{25}{Transformation\relax }{subsection.1.4.2}{}}
\newpmemlabel{^_5}{26}
\@writefile{lof}{\contentsline {figure}{\numberline {1.12}{\ignorespaces Test cases in the pension language allow users to specify test data for each input value of a rule. The rules are then evaluated by an interpreter, providing immediate feedback about incorrect rules.}}{26}{subsection.1.4.2}}
\newlabel{testcases}{{1.12}{26}{Transformation\relax }{subsection.1.4.2}{}}
\@writefile{toc}{\contentsline {paragraph}{Multi-staged Transformation}{26}{paragraph*.7}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.13}{\ignorespaces A transformation adds an emergency stop feature to a state machine. A new state is added ($S_{es}$), and a transition from each other state to that new state is added as well. The transition is triggered by the \emph  {emergency stop} event (not shown).}}{27}{paragraph*.7}}
\newlabel{states2}{{1.13}{27}{Multi-staged Transformation\relax }{paragraph*.7}{}}
\@writefile{toc}{\contentsline {paragraph}{Efficiency and Optimization}{28}{paragraph*.8}}
\@writefile{toc}{\contentsline {paragraph}{Care about generated code}{28}{paragraph*.9}}
\newpmemlabel{^_6}{29}
\@writefile{lof}{\contentsline {figure}{\numberline {1.14}{\ignorespaces The required port \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {lowlevel}\normalfont   is not just bound to the \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {ILowLevel}\normalfont   interface, but restricted tot the \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {ll}\normalfont   port of the \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {LowLevelCode}\normalfont   component. This way, it is statically known which C function implements the behaviour and the generated code can be optimized.}}{29}{paragraph*.9}}
\newlabel{restrictedport}{{1.14}{29}{Care about generated code\relax }{paragraph*.9}{}}
\@writefile{toc}{\contentsline {paragraph}{Platform}{29}{paragraph*.10}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.15}{\ignorespaces Typical layering structure of an application created using DSLs.}}{29}{paragraph*.10}}
\newlabel{platform}{{1.15}{29}{Platform\relax }{paragraph*.10}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.16}{\ignorespaces Stalagmites and stalactites in limestone caves as a metaphor for a generator and a platform.}}{30}{paragraph*.10}}
\newlabel{cave}{{1.16}{30}{Platform\relax }{paragraph*.10}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.3}Interpretation}{30}{subsection.1.4.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.4}Transformation vs. Interpretation}{31}{subsection.1.4.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.5}Sufficiency}{32}{subsection.1.4.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.6}Synchronizing Multiple Mappings}{32}{subsection.1.4.6}}
\newlabel{synctrans}{{1.4.6}{32}{Synchronizing Multiple Mappings\relax }{subsection.1.4.6}{}}
\citation{Mitchell05}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.7}Choosing between Several Mappings}{33}{subsection.1.4.7}}
\newlabel{severalmapp}{{1.4.7}{33}{Choosing between Several Mappings\relax }{subsection.1.4.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.8}Reduced Expressiveness}{33}{subsection.1.4.8}}
\@writefile{toc}{\contentsline {section}{\numberline {1.5}Separation of Concerns}{34}{section.1.5}}
\newlabel{sec:viewpoints}{{1.5}{34}{Separation of Concerns\relax }{section.1.5}{}}
\newpmemlabel{^_7}{34}
\@writefile{lof}{\contentsline {figure}{\numberline {1.17}{\ignorespaces A domain may consist of several concerns. A domain is covered either by a DSL that addresses all of these concerns, or by a set of related, concern-specific DSLs.}}{34}{section.1.5}}
\newlabel{compositionalDomains}{{1.17}{34}{Separation of Concerns\relax }{section.1.5}{}}
\citation{HemelGKV11}
\@writefile{lof}{\contentsline {figure}{\numberline {1.18}{\ignorespaces Part A shows an integrated DSL, where the various concerns (represented by different line styles) are covered by a single integrated language (and consequently, one model). Part B shows several viewpoint languages (and model fragments), each covering a single concern. Arrows in Part B highlight dependencies between the viewpoints.}}{35}{section.1.5}}
\newlabel{viewpoints}{{1.18}{35}{Separation of Concerns\relax }{section.1.5}{}}
\newpmemlabel{^_8}{35}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5.1}Viewpoints for Concern Separation}{35}{subsection.1.5.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5.2}Viewpoints as Annotation Models}{36}{subsection.1.5.2}}
\citation{JirapanthongZ05}
\citation{DiskinXC10}
\citation{Stevens10}
\@writefile{lof}{\contentsline {figure}{\numberline {1.19}{\ignorespaces Progressive refinement: the boxes represent models expressed with corresponding languages. The dotted arrows express dependencies, whereas the solid arrows represent references between model elements.}}{37}{subsection.1.5.3}}
\newlabel{progressiveRefinement}{{1.19}{37}{Viewpoints for Progressive Refinement\relax }{subsection.1.5.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5.3}Viewpoints for Progressive Refinement}{37}{subsection.1.5.3}}
\newlabel{progref}{{1.5.3}{37}{Viewpoints for Progressive Refinement\relax }{subsection.1.5.3}{}}
\newpmemlabel{^_9}{37}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5.4}Viewpoint Synchronization}{37}{subsection.1.5.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5.5}Views on Programs}{38}{subsection.1.5.5}}
\newpmemlabel{^_10}{38}
\@writefile{lof}{\contentsline {figure}{\numberline {1.20}{\ignorespaces Graphical notation for dependencies among rules in a pension plan.}}{38}{subsection.1.5.5}}
\newlabel{dependencies}{{1.20}{38}{Views on Programs\relax }{subsection.1.5.5}{}}
\newpmemlabel{^_11}{38}
\@writefile{lof}{\contentsline {figure}{\numberline {1.21}{\ignorespaces The green annotations are traces into a requirements database. The program can be edited with and without these annotations. The annotations language has no dependency on the languages it annotates.}}{38}{subsection.1.5.5}}
\newlabel{traces}{{1.21}{38}{Views on Programs\relax }{subsection.1.5.5}{}}
\citation{Vlissidis1996}
\@writefile{toc}{\contentsline {section}{\numberline {1.6}Completeness}{39}{section.1.6}}
\newlabel{sect:completeness}{{1.6}{39}{Completeness\relax }{section.1.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.6.1}Compensating for Incompleteness}{39}{subsection.1.6.1}}
\@writefile{toc}{\contentsline {paragraph}{Controlling $D_{-1}$ code}{41}{paragraph*.11}}
\@writefile{toc}{\contentsline {paragraph}{Broken Promises}{41}{paragraph*.12}}
\citation{BeyerHT08}
\citation{PistoiaCFY07}
\citation{AntkiewiczBC09}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.6.2}Roundtrip Transformation}{42}{subsection.1.6.2}}
\@writefile{toc}{\contentsline {section}{\numberline {1.7}Fundamental Paradigms}{43}{section.1.7}}
\newlabel{learnFromGPLs}{{1.7}{43}{Fundamental Paradigms\relax }{section.1.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.7.1}Structure}{43}{subsection.1.7.1}}
\@writefile{toc}{\contentsline {paragraph}{Modularization and Visibility}{43}{paragraph*.13}}
\newpmemlabel{^_12}{44}
\@writefile{lof}{\contentsline {figure}{\numberline {1.22}{\ignorespaces Modules are the top-level contruct in this C implementation. Module contents can be exported, which means they are visible to importing modules.}}{44}{paragraph*.13}}
\newlabel{modules}{{1.22}{44}{Modularization and Visibility\relax }{paragraph*.13}{}}
\@writefile{toc}{\contentsline {paragraph}{Partitioning}{44}{paragraph*.14}}
\@writefile{toc}{\contentsline {paragraph}{Specification vs. Implementation}{46}{paragraph*.15}}
\citation{LiskovW94}
\citation{VoelterVisser2011}
\@writefile{toc}{\contentsline {paragraph}{Specialization}{47}{paragraph*.16}}
\@writefile{toc}{\contentsline {paragraph}{Types and Instances}{47}{paragraph*.17}}
\@writefile{toc}{\contentsline {paragraph}{Superposition and Aspects}{47}{paragraph*.18}}
\newpmemlabel{^_13}{48}
\@writefile{lof}{\contentsline {figure}{\numberline {1.23}{\ignorespaces The aspect component contributes an additional required port to each of the other components defined in the system.}}{48}{paragraph*.18}}
\newlabel{monitoring}{{1.23}{48}{Superposition and Aspects\relax }{paragraph*.18}{}}
\@writefile{toc}{\contentsline {paragraph}{Versioning}{48}{paragraph*.19}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.7.2}Behavior}{49}{subsection.1.7.2}}
\newlabel{parabeh}{{1.7.2}{49}{Behavior\relax }{subsection.1.7.2}{}}
\citation{RoyH2004}
\newpmemlabel{^_14}{50}
\@writefile{lof}{\contentsline {figure}{\numberline {1.24}{\ignorespaces Precondiditions can be added to interface operations. They are executed whenever any runnable that implements the particular operation is executed.}}{50}{subsection.1.7.2}}
\newlabel{precond}{{1.24}{50}{Behavior\relax }{subsection.1.7.2}{}}
\@writefile{toc}{\contentsline {paragraph}{Imperative}{50}{paragraph*.20}}
\@writefile{toc}{\contentsline {paragraph}{Functional}{50}{paragraph*.21}}
\newpmemlabel{^_15}{51}
\@writefile{lof}{\contentsline {figure}{\numberline {1.25}{\ignorespaces Debugging functional programs can be done by showing the state of the calculation, for example as a tree.}}{51}{paragraph*.21}}
\newlabel{debugger}{{1.25}{51}{Functional\relax }{paragraph*.21}{}}
\@writefile{toc}{\contentsline {paragraph}{Declarative}{52}{paragraph*.22}}
\newpmemlabel{^_16}{53}
\@writefile{lof}{\contentsline {figure}{\numberline {1.26}{\ignorespaces Code affected by a presence condition is highlighted in blue. The presence condition is rendered on the left of the affected code. It is a boolean expression over a set of (predefined) configuration parameters.}}{53}{paragraph*.22}}
\newlabel{presencecond}{{1.26}{53}{Declarative\relax }{paragraph*.22}{}}
\newpmemlabel{^_17}{53}
\@writefile{toc}{\contentsline {paragraph}{Reactive/Event-based/Agent}{53}{paragraph*.23}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.27}{\ignorespaces An Mscript block specifies input and output arguments of a block ($u$ and $v$) as well as configuration parameters ($initialCondition$ and $gain$). The assertions specify constraints on the data the blocks works with. The $eq$ statements specify how the output values are calculated from the input values. Stateful behaviours are supported, where the value for the $n$-th step depends on values from previous steps (e.g. $n-1$). }}{54}{paragraph*.22}}
\newlabel{mscript}{{1.27}{54}{Declarative\relax }{paragraph*.22}{}}
\newpmemlabel{^_18}{55}
\@writefile{lof}{\contentsline {figure}{\numberline {1.28}{\ignorespaces The simulator for the cooling language shows the state of the system (commands, event queue, value of hardware properties, variables and tasks). The program can be single-stepped. The user can change the value of variables or hardware properties as a means of interacting with the program.}}{55}{paragraph*.23}}
\newlabel{simulator}{{1.28}{55}{Reactive/Event-based/Agent\relax }{paragraph*.23}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.29}{\ignorespaces Graphical Notation for Flow}}{55}{paragraph*.23}}
\newlabel{graphicalFlow2}{{1.29}{55}{Reactive/Event-based/Agent\relax }{paragraph*.23}{}}
\@writefile{toc}{\contentsline {paragraph}{Dataflow}{55}{paragraph*.24}}
\citation{BerardBidoitM2001}
\@writefile{toc}{\contentsline {paragraph}{State-based}{56}{paragraph*.25}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.7.3}Combinations}{57}{subsection.1.7.3}}
\@writefile{toc}{\contentsline {section}{\numberline {1.8}Language Modularity}{58}{section.1.8}}
\newlabel{sec:extAndComp}{{1.8}{58}{Language Modularity\relax }{section.1.8}{}}
\newpmemlabel{^_19}{58}
\newpmemlabel{^_20}{58}
\@writefile{lof}{\contentsline {figure}{\numberline {1.30}{\ignorespaces We distinguish the four modularization and composition approaches regarding their consequences for fragment structure and language dependencies.}}{59}{section.1.8}}
\newlabel{quadrants}{{1.30}{59}{Language Modularity\relax }{section.1.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.31}{\ignorespaces The relationships between fragments and languages in the four composition approaches. Boxes represent fragments, rounded boxes are languages. Dotted lines are dependencies, solid lines references/associations. The shading of the boxes represent the two different languages.}}{59}{section.1.8}}
\newlabel{fragAndLang}{{1.31}{59}{Language Modularity\relax }{section.1.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.8.1}Language Referencing}{59}{subsection.1.8.1}}
\newpmemlabel{^_21}{59}
\@writefile{lof}{\contentsline {figure}{\numberline {1.32}{\ignorespaces Referencing: Language $l_2$ depends on $l_1$, because concepts in $l_2$ reference concepts in $l_1$. (We use rectangles for languages, circles for language concepts, and UML syntax for the lines: dotted = dependency, normal arrows = associations, hollow-triangle-arrow for inheritance.)}}{59}{equation.1.8.8}}
\newlabel{langReferencing}{{1.32}{59}{Language Referencing\relax }{equation.1.8.8}{}}
\@writefile{toc}{\contentsline {paragraph}{Viewpoints}{59}{paragraph*.26}}
\@writefile{toc}{\contentsline {paragraph}{Progressive Refinement}{60}{paragraph*.27}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.8.2}Language Extension}{60}{subsection.1.8.2}}
\newlabel{lext}{{1.8.2}{60}{Language Extension\relax }{subsection.1.8.2}{}}
\newpmemlabel{^_22}{61}
\@writefile{lof}{\contentsline {figure}{\numberline {1.33}{\ignorespaces Extension: $l_2$ extends $l_1$. It provides additional concepts $B3$ and $B4$. $B3$ extends $A3$, so it can be used as a child of $A2$, plugging $l_2$ into the context provided by $l_1$. Consequently, $l_2$ depends on $l_2$.}}{61}{equation.1.8.11}}
\newlabel{langExtension}{{1.33}{61}{Language Extension\relax }{equation.1.8.11}{}}
\@writefile{toc}{\contentsline {paragraph}{Restriction}{62}{paragraph*.28}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.8.3}Language Reuse}{62}{subsection.1.8.3}}
\newpmemlabel{^_23}{63}
\@writefile{lof}{\contentsline {figure}{\numberline {1.34}{\ignorespaces Reuse: $l_1$ and $l_2$ are independent languages. Within an $l_2$ fragment, we still want to be able to reference concepts in another fragment expressed with $l_1$. To do this, an adapter language $l_A$ is added that depends on both $l_1$ and $l_2$, using inheritance and referencing to adapt $l_1$ to $l_2$.}}{63}{equation.1.8.13}}
\newlabel{langReuse}{{1.34}{63}{Language Reuse\relax }{equation.1.8.13}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.8.4}Language Embedding}{64}{subsection.1.8.4}}
\newpmemlabel{^_24}{64}
\@writefile{lof}{\contentsline {figure}{\numberline {1.35}{\ignorespaces Embedding: $l_1$ and $l_2$ are independent languages. However, we still want to use them in the same fragment. To enable this, an adapter language $l_A$ is added. It depends on both $l_1$ and $l_2$, and uses inheritance and composition to adapt $l_1$ to $l_2$ (this is the almost the same structure as in the case of reuse; the difference is that $B5$ now contains $A3$, instead of just referencing it.)}}{64}{equation.1.8.15}}
\newlabel{langEmbedding}{{1.35}{64}{Language Embedding\relax }{equation.1.8.15}{}}
\@writefile{toc}{\contentsline {paragraph}{Cross-Cutting Embedding, Metadata}{65}{paragraph*.29}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.8.5}Implementation Challenges and Solutions}{66}{subsection.1.8.5}}
\newlabel{challenges}{{1.8.5}{66}{Implementation Challenges and Solutions\relax }{subsection.1.8.5}{}}
\@writefile{toc}{\contentsline {paragraph}{Syntax}{66}{paragraph*.30}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.36}{\ignorespaces The core language (above the dotted line) defines an interface \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {IModuleContent}\normalfont  . Anything that should be hosted inside a \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {Module}\normalfont   has to implement this interface, typically from another language. \fontfamily  {cmtt}\fontseries  {m}\fontshape  {n}\selectfont  {StateMachines}\normalfont   are an example.}}{66}{paragraph*.30}}
\newlabel{statemachinmodules}{{1.36}{66}{Syntax\relax }{paragraph*.30}{}}
\@writefile{toc}{\contentsline {paragraph}{Type Systems}{66}{paragraph*.31}}
\@writefile{toc}{\contentsline {paragraph}{Transformation}{67}{paragraph*.32}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.37}{\ignorespaces Referencing: Two separate, dependent, single-source transformations}}{67}{paragraph*.32}}
\newlabel{referencingCaseA}{{1.37}{67}{Transformation\relax }{paragraph*.32}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.38}{\ignorespaces A single multi-sourced transformation.}}{68}{paragraph*.32}}
\newlabel{referencingCaseB}{{1.38}{68}{Transformation\relax }{paragraph*.32}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.39}{\ignorespaces A preprocessing transformation that changes the referenced fragment in a way specified by the referencing fragment}}{68}{paragraph*.32}}
\newlabel{referencingCaseC}{{1.39}{68}{Transformation\relax }{paragraph*.32}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.40}{\ignorespaces Extension: transformation usually happens by assimiliation, i.e. generating code in the host language from code expressed in the extension language. Optionally, additional files are generated, often some configuration files.}}{68}{paragraph*.32}}
\newlabel{transExtension}{{1.40}{68}{Transformation\relax }{paragraph*.32}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.41}{\ignorespaces Reuse: Reuse of existing transformations for both fragments plus generation of adapter code}}{69}{paragraph*.32}}
\newlabel{reuseCaseA}{{1.41}{69}{Transformation\relax }{paragraph*.32}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.42}{\ignorespaces Reuse: composing transformations}}{69}{paragraph*.32}}
\newlabel{reuseCaseB}{{1.42}{69}{Transformation\relax }{paragraph*.32}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.43}{\ignorespaces Reuse: generating separate artifacts plus a weaving specification}}{69}{paragraph*.32}}
\newlabel{reuseCaseC}{{1.43}{69}{Transformation\relax }{paragraph*.32}{}}
\citation{Steele05}
\@writefile{toc}{\contentsline {paragraph}{Embedding}{70}{paragraph*.33}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.44}{\ignorespaces In transforming embedded languages, a new transformation has to be written if the embedded language does not come with a transformation for the target language of the host language transformation. Otherwise the adapter language can coordinate the transformations for the host and for the emebedded languages.}}{70}{paragraph*.33}}
\newlabel{transEmbedding}{{1.44}{70}{Embedding\relax }{paragraph*.33}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.9}Concrete Syntax}{70}{section.1.9}}
\newlabel{concretesyntax}{{1.9}{70}{Concrete Syntax\relax }{section.1.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.45}{\ignorespaces Graphical Notation for Relationships}}{70}{section.1.9}}
\newlabel{graphicalRel}{{1.45}{70}{Concrete Syntax\relax }{section.1.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.46}{\ignorespaces Graphical Notation for Flow}}{70}{section.1.9}}
\newlabel{graphicalFlow}{{1.46}{70}{Concrete Syntax\relax }{section.1.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.47}{\ignorespaces Graphical Notation for Causality and Timing}}{71}{section.1.9}}
\newlabel{graphicalCause}{{1.47}{71}{Concrete Syntax\relax }{section.1.9}{}}
\@writefile{toc}{\contentsline {paragraph}{When to use which form}{71}{paragraph*.34}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.48}{\ignorespaces Mathematical notations used to express insurance math in the pension workbench.}}{71}{paragraph*.34}}
\newlabel{pensionmath}{{1.48}{71}{When to use which form\relax }{paragraph*.34}{}}
\newpmemlabel{^_25}{71}
\@writefile{lof}{\contentsline {figure}{\numberline {1.49}{\ignorespaces Decision tables use a tabular notation. It is embedded seemlessly into a C program.}}{71}{paragraph*.34}}
\newlabel{dectab}{{1.49}{71}{When to use which form\relax }{paragraph*.34}{}}
\newpmemlabel{^_26}{72}
\@writefile{lof}{\contentsline {figure}{\numberline {1.50}{\ignorespaces Block diagrams built with the Yakindu modeling tools. A textual DSL is used to implement the behaviour in the blocks. While the textual DSL is not technically integrated with the graphical notation (separate viewponts), semantic integration is provided.}}{72}{paragraph*.34}}
\newlabel{blockdiagram}{{1.50}{72}{When to use which form\relax }{paragraph*.34}{}}
\newpmemlabel{^_27}{72}
\@writefile{lof}{\contentsline {figure}{\numberline {1.51}{\ignorespaces The Yakindu Requirements tools integrates a textual DSL for formal requirements specification. An Xtext DSL is syntactically integrated into a table view. Semantic integration is provided as well.}}{73}{paragraph*.34}}
\newlabel{yakreq}{{1.51}{73}{When to use which form\relax }{paragraph*.34}{}}
\@writefile{toc}{\contentsline {paragraph}{Multiple Notations}{73}{paragraph*.35}}
\newpmemlabel{^_28}{73}
\@writefile{lof}{\contentsline {figure}{\numberline {1.52}{\ignorespaces The Yakindu State Chart Tools support the use of Xtext DSLs in actions and guard conditions of state machines, mixing textual and graphical notations. The DSL can even be exchanged, to support domain specific action languages.}}{73}{paragraph*.35}}
\newlabel{statemachines}{{1.52}{73}{Multiple Notations\relax }{paragraph*.35}{}}
\@writefile{toc}{\contentsline {paragraph}{Relationship to Hierarchical Domains}{74}{paragraph*.36}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Process Issues}{75}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}DSL Development}{75}{section.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}Requirements for the Language}{75}{subsection.2.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}Iterative Development}{76}{subsection.2.1.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces Iterating towards a stable language over time}}{76}{subsection.2.1.2}}
\newlabel{languageWaves}{{2.1}{76}{Iterative Development\relax }{subsection.2.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.3}Co-evolve concepts and language}{77}{subsection.2.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.4}Let people do what they are good at}{77}{subsection.2.1.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.5}Domain Users vs. Domain Experts}{78}{subsection.2.1.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.6}DSL as a Product}{78}{subsection.2.1.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.7}Documentation is still necessary}{79}{subsection.2.1.7}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Using DSLs}{79}{section.2.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Reviews}{79}{subsection.2.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}Compatible Organization}{79}{subsection.2.2.2}}
\citation{*}
\bibstyle{abbrv}
\bibdata{fromResearchr_DSLBook.bib}
\bibcite{delete}{{1}{}{{}}{{}}}
\bibcite{www:tmf}{{2}{}{{}}{{}}}
\bibcite{dsl:1997}{{3}{}{{}}{{}}}
\bibcite{VoelterVisserDimensions2011}{{4}{}{{}}{{}}}
\bibcite{AbrahamE07}{{5}{}{{}}{{}}}
\bibcite{Achenbach-Ostermann:DSAL10}{{6}{}{{}}{{}}}
\bibcite{acher-collet-etal:2009}{{7}{}{{}}{{}}}
\bibcite{Adams91modulargrammars}{{8}{}{{}}{{}}}
\bibcite{AhoJU75}{{9}{}{{}}{{}}}
\bibcite{AhoLSU2006}{{10}{}{{}}{{}}}
\bibcite{Aldrich05}{{11}{}{{}}{{}}}
\bibcite{AntkiewiczBC09}{{12}{}{{}}{{}}}
\bibcite{AntoniottiG97}{{13}{}{{}}{{}}}
\bibcite{AJTK:ICMT09}{{14}{}{{}}{{}}}
\bibcite{ArnoldusBB07}{{15}{}{{}}{{}}}
\bibcite{778164}{{16}{}{{}}{{}}}
\bibcite{AtkinsBBC99}{{17}{}{{}}{{}}}
\bibcite{AvgustinovCHKLLMSST06}{{18}{}{{}}{{}}}
\bibcite{BachrachP01}{{19}{}{{}}{{}}}
\bibcite{504285}{{20}{}{{}}{{}}}
\bibcite{291}{{21}{}{{}}{{}}}
\bibcite{BakerH02:0}{{22}{}{{}}{{}}}
\bibcite{BalasubramanianS08}{{23}{}{{}}{{}}}
\bibcite{Banerji87:0}{{24}{}{{}}{{}}}
\bibcite{Barstow85-1}{{25}{}{{}}{{}}}
\bibcite{Batory05}{{26}{}{{}}{{}}}
\bibcite{BauerE09}{{27}{}{{}}{{}}}
\bibcite{Bawden99}{{28}{}{{}}{{}}}
\bibcite{Bell:DSM:2007}{{29}{}{{}}{{}}}
\bibcite{Bentley86}{{30}{}{{}}{{}}}
\bibcite{Bentley86c}{{31}{}{{}}{{}}}
\bibcite{BerardBidoitM2001}{{32}{}{{}}{{}}}
\bibcite{BertrandA99}{{33}{}{{}}{{}}}
\bibcite{BeuchePS04}{{34}{}{{}}{{}}}
\bibcite{BeyerHT08}{{35}{}{{}}{{}}}
\bibcite{BiermanMS05}{{36}{}{{}}{{}}}
\bibcite{BirdGH00}{{37}{}{{}}{{}}}
\bibcite{Bird84}{{38}{}{{}}{{}}}
\bibcite{BirkHJSMM03}{{39}{}{{}}{{}}}
\bibcite{Birngruber01}{{40}{}{{}}{{}}}
\bibcite{BoisDV04}{{41}{}{{}}{{}}}
\bibcite{BonacheaFRS99}{{42}{}{{}}{{}}}
\bibcite{Bosch97:1}{{43}{}{{}}{{}}}
\bibcite{BouwersBV08}{{44}{}{{}}{{}}}
\bibcite{BoylandG94}{{45}{}{{}}{{}}}
\bibcite{Boyland05}{{46}{}{{}}{{}}}
\bibcite{metafront2007}{{47}{}{{}}{{}}}
\bibcite{BrabrandSV03}{{48}{}{{}}{{}}}
\bibcite{Bracha07}{{49}{}{{}}{{}}}
\bibcite{BrachaC90}{{50}{}{{}}{{}}}
\bibcite{Bra08}{{51}{}{{}}{{}}}
\bibcite{BravenboerGV06}{{52}{}{{}}{{}}}
\bibcite{BravenboerDV07}{{53}{}{{}}{{}}}
\bibcite{BravenboerDV-SCP-2009}{{54}{}{{}}{{}}}
\bibcite{BravenboerKVV08}{{55}{}{{}}{{}}}
\bibcite{BravenboerDOV06}{{56}{}{{}}{{}}}
\bibcite{BravenboerVVV05}{{57}{}{{}}{{}}}
\bibcite{BravenboerV04}{{58}{}{{}}{{}}}
\bibcite{BravenboerV07}{{59}{}{{}}{{}}}
\bibcite{BravenboerV08}{{60}{}{{}}{{}}}
\bibcite{BravenboerTV06}{{61}{}{{}}{{}}}
\bibcite{Bruce97}{{62}{}{{}}{{}}}
\bibcite{Budinsky-2004-EMF}{{63}{}{{}}{{}}}
\bibcite{BuehrerWS05}{{64}{}{{}}{{}}}
\bibcite{CalcagnoTHL03}{{65}{}{{}}{{}}}
\bibcite{CardelliD99}{{66}{}{{}}{{}}}
\bibcite{Cazzola:2010:DET:1890683.1890689}{{67}{}{{}}{{}}}
\bibcite{Cazzola:2009:SDS:1509307.1509311}{{68}{}{{}}{{}}}
\bibcite{ChandraRL99}{{69}{}{{}}{{}}}
\bibcite{charles91lpg}{{70}{}{{}}{{}}}
\bibcite{CharlesFS07}{{71}{}{{}}{{}}}
\bibcite{imp}{{72}{}{{}}{{}}}
\bibcite{ChikofskyC90}{{73}{}{{}}{{}}}
\bibcite{ChristensenMS03}{{74}{}{{}}{{}}}
\bibcite{superlanguages}{{75}{}{{}}{{}}}
\bibcite{ClarkT09}{{76}{}{{}}{{}}}
\bibcite{Cleaveland88}{{77}{}{{}}{{}}}
\bibcite{Cleenewerck03}{{78}{}{{}}{{}}}
\bibcite{CliftonMLC06}{{79}{}{{}}{{}}}
\bibcite{CookR05}{{80}{}{{}}{{}}}
\bibcite{CoplienHW98}{{81}{}{{}}{{}}}
\bibcite{Cordy06}{{82}{}{{}}{{}}}
\bibcite{CordyHP88}{{83}{}{{}}{{}}}
\bibcite{CordyHP91}{{84}{}{{}}{{}}}
\bibcite{CoxBCKK08}{{85}{}{{}}{{}}}
\bibcite{Crew97}{{86}{}{{}}{{}}}
\bibcite{Cunningham08}{{87}{}{{}}{{}}}
\bibcite{CuylerH05}{{88}{}{{}}{{}}}
\bibcite{CzarneckiA05}{{89}{}{{}}{{}}}
\bibcite{CzarneckiAK06}{{90}{}{{}}{{}}}
\bibcite{CzarneckiEisenecker1999}{{91}{}{{}}{{}}}
\bibcite{CzarneckiHE05}{{92}{}{{}}{{}}}
\bibcite{CzarneckiW07}{{93}{}{{}}{{}}}
\bibcite{DanaherLL06}{{94}{}{{}}{{}}}
\bibcite{DeBaudS99}{{95}{}{{}}{{}}}
\bibcite{Demirezen09}{{96}{}{{}}{{}}}
\bibcite{Deursen97}{{97}{}{{}}{{}}}
\bibcite{DhunganaRGLF07}{{98}{}{{}}{{}}}
\bibcite{cs-SE-9903002}{{99}{}{{}}{{}}}
\bibcite{DinkelakerEM10}{{100}{}{{}}{{}}}
\bibcite{DiskinXC10}{{101}{}{{}}{{}}}
\bibcite{lopnextprogrammingparadigm}{{102}{}{{}}{{}}}
\bibcite{DohM01}{{103}{}{{}}{{}}}
\bibcite{Duca08a}{{104}{}{{}}{{}}}
\bibcite{Duca06b}{{105}{}{{}}{{}}}
\bibcite{EaddyAHMB07}{{106}{}{{}}{{}}}
\bibcite{EkmanH04}{{107}{}{{}}{{}}}
\bibcite{EkmanH07}{{108}{}{{}}{{}}}
\bibcite{Elliott99:0}{{109}{}{{}}{{}}}
\bibcite{ElliottFM03}{{110}{}{{}}{{}}}
\bibcite{Engler99}{{111}{}{{}}{{}}}
\bibcite{Erdweg-GPCE-2011}{{112}{}{{}}{{}}}
\bibcite{Erdweg-OOPSLA-2011}{{113}{}{{}}{{}}}
\bibcite{ErwigW09}{{114}{}{{}}{{}}}
\bibcite{EstublierVI05}{{115}{}{{}}{{}}}
\bibcite{FaithNP97}{{116}{}{{}}{{}}}
\bibcite{FayadS97}{{117}{}{{}}{{}}}
\bibcite{FernandezST99}{{118}{}{{}}{{}}}
\bibcite{581483}{{119}{}{{}}{{}}}
\bibcite{Fowler2005-MPS}{{120}{}{{}}{{}}}
\bibcite{Fowler2004}{{121}{}{{}}{{}}}
\bibcite{Fowler09-0}{{122}{}{{}}{{}}}
\bibcite{Fowler2011}{{123}{}{{}}{{}}}
\bibcite{FreemanP06}{{124}{}{{}}{{}}}
\bibcite{Freeze2006}{{125}{}{{}}{{}}}
\bibcite{Fuchs97:0}{{126}{}{{}}{{}}}
\bibcite{GacekA01}{{127}{}{{}}{{}}}
\bibcite{GOF95}{{128}{}{{}}{{}}}
\bibcite{GokhaleBKBEDTPS08}{{129}{}{{}}{{}}}
\bibcite{Goldschmidt08}{{130}{}{{}}{{}}}
\bibcite{GoldschmidtBU08}{{131}{}{{}}{{}}}
\bibcite{GoslingJSB2005}{{132}{}{{}}{{}}}
\bibcite{GouldSD04a}{{133}{}{{}}{{}}}
\bibcite{GouldSD04}{{134}{}{{}}{{}}}
\bibcite{Grimm06}{{135}{}{{}}{{}}}
\bibcite{GroenewegenVisser-SOSYM-2011}{{136}{}{{}}{{}}}
\bibcite{GroenewegenHKV08}{{137}{}{{}}{{}}}
\bibcite{GroenewegenHKV08:DSM}{{138}{}{{}}{{}}}
\bibcite{GroenewegenHV-IEEESW-2010}{{139}{}{{}}{{}}}
\bibcite{GroenewegenV08}{{140}{}{{}}{{}}}
\bibcite{GroenewegenV09-0}{{141}{}{{}}{{}}}
\bibcite{GroenewegenV-SLE-2009}{{142}{}{{}}{{}}}
\bibcite{GronnigerKRSV08}{{143}{}{{}}{{}}}
\bibcite{GuyerL99}{{144}{}{{}}{{}}}
\bibcite{GybelsWDD06}{{145}{}{{}}{{}}}
\bibcite{HalfondO05}{{146}{}{{}}{{}}}
\bibcite{HalfondOM06}{{147}{}{{}}{{}}}
\bibcite{Halpin00}{{148}{}{{}}{{}}}
\bibcite{Halpin02}{{149}{}{{}}{{}}}
\bibcite{Halpin04:0}{{150}{}{{}}{{}}}
\bibcite{Hedin00}{{151}{}{{}}{{}}}
\bibcite{HedinM03}{{152}{}{{}}{{}}}
\bibcite{HeeringHKR89}{{153}{}{{}}{{}}}
\bibcite{HeeringK85}{{154}{}{{}}{{}}}
\bibcite{HeidenreichJKSW09}{{155}{}{{}}{{}}}
\bibcite{HeidenreichKW08}{{156}{}{{}}{{}}}
\bibcite{HeidenreichWende-AOPLE07}{{157}{}{{}}{{}}}
\bibcite{HemelGKV11}{{158}{}{{}}{{}}}
\bibcite{HemelKGV-2010}{{159}{}{{}}{{}}}
\bibcite{HemelKV08}{{160}{}{{}}{{}}}
\bibcite{HemelVV08}{{161}{}{{}}{{}}}
\bibcite{HemelV09}{{162}{}{{}}{{}}}
\bibcite{HemelVisser2011}{{163}{}{{}}{{}}}
\bibcite{Henriksson-08}{{164}{}{{}}{{}}}
\bibcite{HessellundCW07}{{165}{}{{}}{{}}}
\bibcite{HirzelG07}{{166}{}{{}}{{}}}
\bibcite{Hofer-GPCE-2010}{{167}{}{{}}{{}}}
\bibcite{HoferORM08}{{168}{}{{}}{{}}}
\bibcite{HopcroftMU2006}{{169}{}{{}}{{}}}
\bibcite{HorowitzKN85}{{170}{}{{}}{{}}}
\bibcite{HuangYHTLK04:0}{{171}{}{{}}{{}}}
\bibcite{Hudak96}{{172}{}{{}}{{}}}
\bibcite{Hudak98}{{173}{}{{}}{{}}}
\bibcite{JaegerF09}{{174}{}{{}}{{}}}
\bibcite{Jeffery03}{{175}{}{{}}{{}}}
\bibcite{JenningsB99}{{176}{}{{}}{{}}}
\bibcite{JirapanthongZ05}{{177}{}{{}}{{}}}
\bibcite{Joh75.yacc}{{178}{}{{}}{{}}}
\bibcite{JonesSantos1998}{{179}{}{{}}{{}}}
\bibcite{JouaultBK06}{{180}{}{{}}{{}}}
\bibcite{Steele99}{{181}{}{{}}{{}}}
\bibcite{Steele05}{{182}{}{{}}{{}}}
\bibcite{HerndonB88}{{183}{}{{}}{{}}}
\bibcite{KallebergV08}{{184}{}{{}}{{}}}
\bibcite{KamU77:0}{{185}{}{{}}{{}}}
\bibcite{KaminH97}{{186}{}{{}}{{}}}
\bibcite{KarakoidasS09}{{187}{}{{}}{{}}}
\bibcite{KastensW94}{{188}{}{{}}{{}}}
\bibcite{KATKB:TOOLS09}{{189}{}{{}}{{}}}
\bibcite{Kats07}{{190}{}{{}}{{}}}
\bibcite{KatsBV08}{{191}{}{{}}{{}}}
\bibcite{KatsJNV09}{{192}{}{{}}{{}}}
\bibcite{KKV08}{{193}{}{{}}{{}}}
\bibcite{KKV09}{{194}{}{{}}{{}}}
\bibcite{KatsSV09}{{195}{}{{}}{{}}}
\bibcite{KatsV10a}{{196}{}{{}}{{}}}
\bibcite{KatsV10}{{197}{}{{}}{{}}}
\bibcite{KatsVW10}{{198}{}{{}}{{}}}
\bibcite{KellyP09}{{199}{}{{}}{{}}}
\bibcite{KiczalesHHKPG01}{{200}{}{{}}{{}}}
\bibcite{KiczalesLMMLLI97}{{201}{}{{}}{{}}}
\bibcite{KieburtzMBHKLOSSW96}{{202}{}{{}}{{}}}
\bibcite{KlarlundS99}{{203}{}{{}}{{}}}
\bibcite{Klint93}{{204}{}{{}}{{}}}
\bibcite{KlintLV05}{{205}{}{{}}{{}}}
\bibcite{Knuth68}{{206}{}{{}}{{}}}
\bibcite{KojarskiL07:0}{{207}{}{{}}{{}}}
\bibcite{Kosar2008}{{208}{}{{}}{{}}}
\bibcite{KrahnRV08}{{209}{}{{}}{{}}}
\bibcite{KrahnRV10}{{210}{}{{}}{{}}}
\bibcite{KuiperS98}{{211}{}{{}}{{}}}
\bibcite{KutterP97}{{212}{}{{}}{{}}}
\bibcite{LaddR94-0}{{213}{}{{}}{{}}}
\bibcite{1554241}{{214}{}{{}}{{}}}
\bibcite{Langston90-1}{{215}{}{{}}{{}}}
\bibcite{365879}{{216}{}{{}}{{}}}
\bibcite{LeijenM99}{{217}{}{{}}{{}}}
\bibcite{LiVitanyi2008}{{218}{}{{}}{{}}}
\bibcite{LindholmY97}{{219}{}{{}}{{}}}
\bibcite{LiskovW94}{{220}{}{{}}{{}}}
\bibcite{LiuKM06}{{221}{}{{}}{{}}}
\bibcite{LogozzoF08}{{222}{}{{}}{{}}}
\bibcite{Lumpe08}{{223}{}{{}}{{}}}
\bibcite{Lammel01:0}{{224}{}{{}}{{}}}
\bibcite{Lammel03}{{225}{}{{}}{{}}}
\bibcite{LammelVV03}{{226}{}{{}}{{}}}
\bibcite{MacalaSG96}{{227}{}{{}}{{}}}
\bibcite{MagnussonEH07}{{228}{}{{}}{{}}}
\bibcite{MagnussonH07}{{229}{}{{}}{{}}}
\bibcite{McClureK05}{{230}{}{{}}{{}}}
\bibcite{MedvidovicR97}{{231}{}{{}}{{}}}
\bibcite{MeijerBB06}{{232}{}{{}}{{}}}
\bibcite{MeijerV00}{{233}{}{{}}{{}}}
\bibcite{MendoncaWC09}{{234}{}{{}}{{}}}
\bibcite{MenonP99}{{235}{}{{}}{{}}}
\bibcite{MernikHS05}{{236}{}{{}}{{}}}
\bibcite{MernikLAZ00:0}{{237}{}{{}}{{}}}
\bibcite{MernikZLA99}{{238}{}{{}}{{}}}
\bibcite{MiecznikowskiH01}{{239}{}{{}}{{}}}
\bibcite{Mitchell05}{{240}{}{{}}{{}}}
\bibcite{MoorsPO2008}{{241}{}{{}}{{}}}
\bibcite{Muliawan08}{{242}{}{{}}{{}}}
\bibcite{MurerOSS96}{{243}{}{{}}{{}}}
\bibcite{NakataniAOP99}{{244}{}{{}}{{}}}
\bibcite{Neighbors84}{{245}{}{{}}{{}}}
\bibcite{Nierstrasz99}{{246}{}{{}}{{}}}
\bibcite{NierstraszM94}{{247}{}{{}}{{}}}
\bibcite{NierstraszM95}{{248}{}{{}}{{}}}
\bibcite{Nilsson-NymanHME09}{{249}{}{{}}{{}}}
\bibcite{NystromCM03}{{250}{}{{}}{{}}}
\bibcite{NystromQM06}{{251}{}{{}}{{}}}
\bibcite{OderskyZ2005}{{252}{}{{}}{{}}}
\bibcite{OldevikH07}{{253}{}{{}}{{}}}
\bibcite{OngkingcoATHMS06}{{254}{}{{}}{{}}}
\bibcite{Ousterhout98}{{255}{}{{}}{{}}}
\bibcite{Paakki95}{{256}{}{{}}{{}}}
\bibcite{Parr08}{{257}{}{{}}{{}}}
\bibcite{Parr:2010}{{258}{}{{}}{{}}}
\bibcite{Perlis82}{{259}{}{{}}{{}}}
\bibcite{PetersonH99}{{260}{}{{}}{{}}}
\bibcite{PetersonHE99}{{261}{}{{}}{{}}}
\bibcite{Pfeiffer2008}{{262}{}{{}}{{}}}
\bibcite{PistoiaCFY07}{{263}{}{{}}{{}}}
\bibcite{Piumarta07openreusable}{{264}{}{{}}{{}}}
\bibcite{PorterCW05}{{265}{}{{}}{{}}}
\bibcite{Priss99:0}{{266}{}{{}}{{}}}
\bibcite{Priss00}{{267}{}{{}}{{}}}
\bibcite{ReichweinRB99}{{268}{}{{}}{{}}}
\bibcite{RendelOH09}{{269}{}{{}}{{}}}
\bibcite{Reng09c}{{270}{}{{}}{{}}}
\bibcite{Reng10c}{{271}{}{{}}{{}}}
\bibcite{Reng09b}{{272}{}{{}}{{}}}
\bibcite{Reng10a}{{273}{}{{}}{{}}}
\bibcite{RepsT84}{{274}{}{{}}{{}}}
\bibcite{Riehl06:0}{{275}{}{{}}{{}}}
\bibcite{Roos-Frantz09}{{276}{}{{}}{{}}}
\bibcite{RoyH2004}{{277}{}{{}}{{}}}
\bibcite{salomon-disambiguation}{{278}{}{{}}{{}}}
\bibcite{Samet-TOPLAS-1980}{{279}{}{{}}{{}}}
\bibcite{SampleBMW99}{{280}{}{{}}{{}}}
\bibcite{SarkarWD04}{{281}{}{{}}{{}}}
\bibcite{Schaefer10-1}{{282}{}{{}}{{}}}
\bibcite{Schmitz06-0}{{283}{}{{}}{{}}}
\bibcite{SchwerdfegerW09-0}{{284}{}{{}}{{}}}
\bibcite{Seaton2007}{{285}{}{{}}{{}}}
\bibcite{SeymourD01}{{286}{}{{}}{{}}}
\bibcite{Shalit1996}{{287}{}{{}}{{}}}
\bibcite{Sheard01:1}{{288}{}{{}}{{}}}
\bibcite{SheardBP99}{{289}{}{{}}{{}}}
\bibcite{SimonyiCC06}{{290}{}{{}}{{}}}
\bibcite{SirerB99}{{291}{}{{}}{{}}}
\bibcite{SmaragdakisB97}{{292}{}{{}}{{}}}
\bibcite{SmaragdakisB02}{{293}{}{{}}{{}}}
\bibcite{Spiewak:2009}{{294}{}{{}}{{}}}
\bibcite{Spinellis01:0}{{295}{}{{}}{{}}}
\bibcite{Sprinkle:TSE:2009}{{296}{}{{}}{{}}}
\bibcite{Steimann00:1}{{297}{}{{}}{{}}}
\bibcite{Stevens10}{{298}{}{{}}{{}}}
\bibcite{StichnothG97}{{299}{}{{}}{{}}}
\bibcite{StrembeckZ09}{{300}{}{{}}{{}}}
\bibcite{SuW-POPL-2006}{{301}{}{{}}{{}}}
\bibcite{SzyperskiSzyperski1998}{{302}{}{{}}{{}}}
\bibcite{Taha03}{{303}{}{{}}{{}}}
\bibcite{TahaS00}{{304}{}{{}}{{}}}
\bibcite{TatsuboriCIK99}{{305}{}{{}}{{}}}
\bibcite{TeitelbaumR81}{{306}{}{{}}{{}}}
\bibcite{ThibaultMC99}{{307}{}{{}}{{}}}
\bibcite{tratt04compiletm}{{308}{}{{}}{{}}}
\bibcite{tratt05convergepl}{{309}{}{{}}{{}}}
\bibcite{Tratt08-TOPLAS}{{310}{}{{}}{{}}}
\bibcite{TschantzK06}{{311}{}{{}}{{}}}
\bibcite{Valkering2007}{{312}{}{{}}{{}}}
\bibcite{BrandJKO00}{{313}{}{{}}{{}}}
\bibcite{BrandSVV02}{{314}{}{{}}{{}}}
\bibcite{BrandDHJJKKMOSVVV01}{{315}{}{{}}{{}}}
\bibcite{ares:1998}{{316}{}{{}}{{}}}
\bibcite{DHP:1996}{{317}{}{{}}{{}}}
\bibcite{DeursenK98}{{318}{}{{}}{{}}}
\bibcite{DeursenKT93}{{319}{}{{}}{{}}}
\bibcite{DeursenKV00}{{320}{}{{}}{{}}}
\bibcite{DeursenV02}{{321}{}{{}}{{}}}
\bibcite{Veldhuizen99}{{322}{}{{}}{{}}}
\bibcite{VermolenV08}{{323}{}{{}}{{}}}
\bibcite{Visser-1997-SDF}{{324}{}{{}}{{}}}
\bibcite{Visser1997}{{325}{}{{}}{{}}}
\bibcite{Vis97.thesis}{{326}{}{{}}{{}}}
\bibcite{Visser02}{{327}{}{{}}{{}}}
\bibcite{Visser03}{{328}{}{{}}{{}}}
\bibcite{Visser-SCAM-2005}{{329}{}{{}}{{}}}
\bibcite{Visser07}{{330}{}{{}}{{}}}
\bibcite{Visser:2009}{{331}{}{{}}{{}}}
\bibcite{Visser2010}{{332}{}{{}}{{}}}
\bibcite{VisserBT98}{{333}{}{{}}{{}}}
\bibcite{Vlissidis1996}{{334}{}{{}}{{}}}
\bibcite{Voelter2008}{{335}{}{{}}{{}}}
\bibcite{Voelter2009}{{336}{}{{}}{{}}}
\bibcite{Voelter:MoDELS:2010}{{337}{}{{}}{{}}}
\bibcite{Voelter10}{{338}{}{{}}{{}}}
\bibcite{Voelter2010}{{339}{}{{}}{{}}}
\bibcite{Voelter10-0}{{340}{}{{}}{{}}}
\bibcite{Voelter2011}{{341}{}{{}}{{}}}
\bibcite{VoelterGroher2007}{{342}{}{{}}{{}}}
\bibcite{VoelterSolomatov2010}{{343}{}{{}}{{}}}
\bibcite{VoelterVisser2011}{{344}{}{{}}{{}}}
\bibcite{VogtSK89}{{345}{}{{}}{{}}}
\bibcite{Volter10}{{346}{}{{}}{{}}}
\bibcite{Voelter2011-0}{{347}{}{{}}{{}}}
\bibcite{VolterG07}{{348}{}{{}}{{}}}
\bibcite{WangAKS97}{{349}{}{{}}{{}}}
\bibcite{WarthP07}{{350}{}{{}}{{}}}
\bibcite{WarthSM06}{{351}{}{{}}{{}}}
\bibcite{WeckRS06}{{352}{}{{}}{{}}}
\bibcite{WeckRS07}{{353}{}{{}}{{}}}
\bibcite{WeiseC93}{{354}{}{{}}{{}}}
\bibcite{Weststrate2009}{{355}{}{{}}{{}}}
\bibcite{WhiteBSTDC10}{{356}{}{{}}{{}}}
\bibcite{WhiteHGTGS09}{{357}{}{{}}{{}}}
\bibcite{Wile97:1}{{358}{}{{}}{{}}}
\bibcite{Wilson04:2}{{359}{}{{}}{{}}}
\bibcite{Wirth77a:0}{{360}{}{{}}{{}}}
\bibcite{WuGM08}{{361}{}{{}}{{}}}
\bibcite{WuGM09}{{362}{}{{}}{{}}}
\bibcite{WykBGK08}{{363}{}{{}}{{}}}
\bibcite{WykMBK02}{{364}{}{{}}{{}}}
\bibcite{WykKBJ06}{{365}{}{{}}{{}}}
\bibcite{WykKBS07}{{366}{}{{}}{{}}}
\bibcite{WykS07}{{367}{}{{}}{{}}}
\bibcite{ZengerO01}{{368}{}{{}}{{}}}
\bibcite{Zenger01implementingextensible}{{369}{}{{}}{{}}}
\bibcite{ZookHS04}{{370}{}{{}}{{}}}
\providecommand\NAT@force@numbers{}\NAT@force@numbers
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}Domain Users Programming?}{80}{subsection.2.2.3}}
\ttl@finishall
