> In lanmguage theory (which this chapter seems to be about)  a grapmmar is a speciufication of all proigrams for a language..  That is far from an implementation issue.

well, in projectional editors there simply is no grammar. There's no way around it.
So, not all language definition formalisms include grammars.

> external vs. internal DSLs is never explained

it is. In the intro.

> Graphical editors are not purp[lyt projectional,m because the ;layout opf a diagram is usually created by the modeler.  Thgis means that thge location and size information of graphical elements is also stored somewhere and this is not the abstract syntax tree.
> I think that viisual editors are usually NOT projectional!

they are certainly more projectional than they are parser based.
They "listen" to user actions, change the ast, and then rerender the diagram.
The fact that users can change positions and that this has to be stored somewhere, doesn't change this in my view.


> You shyould explainj that a standard liubvrary is not a linguistic but an in language abstarction.  \That is what this chapter is about and that is why this is relevant.  Don't ecpect the reader to get all thast.

it says so in the first line of the paragraph!